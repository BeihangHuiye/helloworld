#include<iostream>
using namespace std;
#include<string>  //使用C++标准库中的string类型

// 单行注释，使用双斜杠

/*
这
是
多
行
注
释
*/

// main只能有一个

// 定义一个常量
#define day 7
// const int day = 7;


int main01()
{
	/////////////////////////////////// 变量的定义  /////////////////////////////////////
	// 变量存在的意义：方便我们管理内存空间
	// 基本语法 :
	// 数据类型  变量名 = 初始值; 
	// 例如 int a = 10;
	int a = 10;
	cout << "a=" << a << endl;

	/////////////////////////////////// 常量  /////////////////////////////////////
	// 常量：用于记录程序中不可更改的数据
	// 有两种方式定义C++中的常量
	// 第一种是使用宏常量： #define 常量名 常量值
	// 第二种是使用const来修饰： const 数据类型 常量名 = 常量值
	// 进行修改的话会报错
	//day = 8; day是一个常量，不能被修改
	cout << "一周总共有：" << day <<"天" << endl;

	// 2、使用const修饰变量
    const int month = 12;
	// month = 13;  // 错误，常量不能被修改
    cout << "一年总共有：" << month << "个月" << endl;


	/////////////////////////////////// 标识符标识符命名规则 /////////////////////////////////////
    	// 1、标识符不能是关键字
    	// 2、标识符只能由字母、数字、下划线组成
    	// 3、标识符不能以数字开头
    	// 4、标识符严格区分大小写


	/////////////////////////////////// 整型 /////////////////////////////////////
	// 变量数据类型。存在的意义就是给变量分配合适的内存空间
    	// 整型：short、int、long、long long
				//short 占用空间：2字节  取值范围：-32768~32767
				//int   占用空间：4字节  取值范围：-2147483648~2147483647
				//long  占用空间：4字节  取值范围：-2147483648~2147483647
    			//long long 占用空间：8字节  取值范围：-9223372036854775808~92233720368547
	

	/////////////////////////////////// sizeo关键字 /////////////////////////////////////
	// 作用：可以获取数据类型所占内存空间的大小
	// 基本语法：sizeof(数据类型/变量名)
	// 一些实例：
    cout << "size of int = " << sizeof(int) << endl;
    cout << "size of short = " << sizeof(short) << endl;
	cout << "size of long = " << sizeof(long) << endl;
    cout << "size of long long = " << sizeof(long long) << endl;
	cout << "day的占用内存空间： " << sizeof(day) << endl;

	/////////////////////////////////// 浮点型 /////////////////////////////////////
	// 浮点型：float、double
	//	float 占用空间：4字节  有效数字范围精确7位
	//  double 占用空间：8字节  有效数字范围精确15位
	float f1 = 3.1415926f;  //加上f表示这是一个浮点数。不加f的话，编译器会默认为double类型
    double d1 = 3.1415926;
	cout << "f1=" << f1 << endl;  //输出为f1 = 3.14159
    cout << "d1=" << d1 << endl;  //输出为f1 = 3.14159
	//不论写多少位，cout输出浮点数只能保证6位有效数字，如果需要显示更多的位数，需要额外的配置
	//科学计数法 
    // 1.23e2 = 1.23 * 10^2 = 123.0
	float f2 = 1.23e2;
	float f3 = 1.23e-2;
	cout << "f2=" << f2 << endl;  
	cout << "f3=" << f3 << endl;

	/////////////////////////////////// 字符型  /////////////////////////////////////
	// 字符型：char
    // 字符型变量只占用1个字节
	// 语法： char 变量名 = '字符';  
	// 特别注意: 
	// 1、单引号，单引号只能包含一个字符，双引号可以包含一个字符串
    // 2、字符型变量本质存储的是ASCII码值

	// 字符型变量的创建
	char ch = 'a';
    cout << "ch=" << ch << endl;
    cout << "ch的ASCII码值：" << (int)ch << endl;  //强制类型转换

	// 字符型所占的内存空间
    cout << "char类型所占内存空间：" << sizeof(char) << endl;

	// 常见的错误
    // char ch1 = 'ab';  //错误，单引号只能包含一个字符
    // char ch2 = "a";  //错误，双引号不可以，得用单引号


	/////////////////////////////////// 转义字符  /////////////////////////////////////
	// 转义字符：反斜杠+其他字符
    // 常见的转义字符：
    // \n  换行
    // \t  制表符，相当于按一下tab键,可以整齐输出
	//    \\  一个\

	cout << "hello\nworld" << endl;
	cout << "hello\tworld" << endl;
    cout << "hello\\world" << endl;

	/////////////////////////////////// 字符串型  /////////////////////////////////////
    // 两种风格，C风格字符串和C++风格字符串
    // C风格字符串：
		// 语法：char 变量名[] = "字符串值";
    	// 注意：C++推荐使用C++风格字符串
	char str1[] = "hello world";  //字符串的结束标志是'\0'，在计算字符串长度的时候会自动计算
    cout << "str1=" << str1 << endl;
    cout << "str1的长度为：" << strlen(str1) << endl;  //strlen函数可以计算字符串的长度

	// C++风格字符串：
		// 语法：string 变量名 = "字符串值";
        // 注意：string不是C++关键字，而是C++标准库中的字符串类
		// 需要包含一个头文件 #include <string>
    string str2 = "hello world";  //string是C++风格字符串
    cout << "str2=" << str2 << endl;

	/////////////////////////////////// 布尔类型  /////////////////////////////////////
    // 布尔类型：bool
    // 只有两个取值：true、false
	// bool类型只占1个字节
    bool flag = true;
    cout << "flag=" << flag << endl;
    cout << "flag占用的内存空间为：" << sizeof(bool) << endl;

	cout <<"\n" << endl;

	/////////////////////////////////// 数据的输入  /////////////////////////////////////
	// cin是C++的输入对象，作用：从键盘获取数据
	// 语法：cin >> 变量名;
	//1、整型
    //int input_int = 0;
    //cout << "请输入整型变量a的值：" << endl;
    //cin >> input_int;
    //cout << "您输入的整型变量值为：" << input_int << endl;

    //2、浮点型
    //float input_float = 0.0f;
    //cout << "请输入浮点型变量f的值：" << endl;
    //cin >> input_float;
    //cout << "您输入的浮点型变量值为：" << input_float << endl;

	//3. 字符型
	//char input_char = '0';
 //   cout << "请输入字符型变量的值：" << endl;
 //   cin >> input_char;
 //   cout << "您输入的字符型变量的值为：" << input_char << endl;

    //4. 字符串型
    //string input_string = "0";
    //cout << "请输入字符串型变量的值：" << endl;
    //cin >> input_string;
    //cout << "您输入的字符串型变量的值为：" << input_string << endl;

	//5. 布尔型
	//注意：输入任何非零的数字，都会被当作true
    //bool input_bool = false;
    //cout << "请输入布尔型变量的值：" << endl;
    //cin >> input_bool;
    //cout << "您输入的布尔型变量的值为：" << input_bool << endl;
	


	/////////////////////////////////// 运算符  /////////////////////////////////////
	// 算术运算符：+、-、*、/、%
		// +、-除了可以当做运算符，还可以当做正负号
		int a1 = 10;
        int b1 = 3;
        cout <<"a1 + b1 = "<< a1 + b1 << endl;
        cout <<"a1 - b1 = "<< a1 - b1 << endl;
        cout <<"a1 * b1 = "<< a1 * b1 << endl;
        cout <<"a1 / b1 = "<< a1 / b1 << endl;  
		// 两个int整数相除，结果还是整数,向下取整（直接暴力去除小数部分）
		// 需要注意的是，除数不可以为0，否则会报错
		double aa1 = 10.0;
        double bb1 = 20.0;
		// 两个double浮点数相除，结果是浮点数
        cout <<"aa1 / bb1 = "<< aa1 / bb1 << endl;  

		// 取余运算符：% ，只能用于整数
        cout <<"a1 % b1 = "<< a1 % b1 << endl;    //取余运算符，结果为余数 10/3 = 3余1
		cout << "b1 % a1 = " << b1 % a1 << endl;  //取余运算符，结果为余数 3/10 = 0余3
		
		// ++、--运算符
        // ++、--运算符可以放在变量前面，也可以放在变量后面，分别构成前置递增递减和后置递增递减
		// 前置递增递减：先递增递减，再使用变量
        // 后置递增递减：先使用变量，再递增递减

		int a2 = 10;
        cout << "前置递增：" << ++a2 << endl;   // 11
		cout << "后置递增：" << a2++ << endl;   // 11

		int b2 = 10;
		cout << "前置递增：" << ++b2 *2 << endl;  // 22
		int c2 = 10;
		cout << "后置递增：" << c2++ *2<< endl;   // 20

	// 赋值运算=、+=、-=、*=、/=、%=
		//a += 7意思就是：把7加给a，然后再把加完之后的数字赋给a。写成具体的表达式：a = a + 7
		//b -= 8意思就是：用a减去8，然后再把减完之后的数字赋给b。写成具体的表达式：b = b - 7
		//c *= 9意思就是：将c乘上9，然后再把乘完之后的数字赋给c。写成具体的表达式：c = c * 7
		//d /= 5意思就是：把d除以5，然后再把除完之后的数字赋给d。写成具体的表达式：d = d / 7
		//e %= 6意思就是：把e除以6得到的余数，然后再把模完之后的数字赋给e。写成具体的表达式：e = e % 7
	
	// 比较运算符 ==、!=、>、<、>=、<=
		// 比较结果==、!=、>、<、>=、<= 返回的结果都是布尔类型
		// 例如 a == b，如果a等于b，那么结果为true，否则结果为false
		// 例如 a != b，如果a不等于b，那么结果为true，否则结果为false
		int abj = 0;
        int bbj = 0;
		cout << "abj == bbj的比较输出：" << (abj == bbj) << endl;
	
    // 逻辑运算符 &&、||、!
        // 逻辑与 &&：两边都为true，结果才为true，否则结果为false
        // 逻辑或 ||：两边只要有一个为true，结果就为true，否则结果为false
        // 逻辑非 !：将true变为false，将false变为true
		
		// 逻辑非 !：将true变为false，将false变为true
		int a_logic = 10;
		cout << "!a_logic的结果为："<< !a_logic << endl;
		cout << "!a_logic的结果为：" << !!a_logic << endl; //c++里非0的数都为true，0为false

		// 逻辑与 &&：两边都为true，结果才为true，否则结果为false
		int b_logic = 2;
		cout << "b_logic && a_logic的结果为：" << (b_logic && a_logic) << endl; //1
		b_logic = 0;
		cout << "b_logic && a_logic的结果为：" << (b_logic && a_logic) << endl; //0

        // 逻辑或 ||：两边只要有一个为true，结果就为true，否则结果为false
		cout << "0 || 1的结果：" << (0 || 1) << endl; //1
        cout << "0 || 0的结果：" << (0 || 0) << endl; //0




	system("pause");
	return 0;
}




